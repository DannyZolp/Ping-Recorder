# This is a basic workflow to help you get started with Actions

name: Make Binaries

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Use Node.js 14
        uses: actions/setup-node@v2.1.3
        with:
          node-version: 14.x
    
      - name: Install NPM Packages
        run: yarn install
        
      - name: Build (MacOS)
        run: yarn make --arch x64 --platform mas
        if: matrix.os == "macos-latest"
        
      - name: Build (Linux)
        run: yarn make --arch x64 --platform linux
        if: matrix.os == "ubuntu-latest"
        
      - name: Build (Windows)
        run: yarn make --arch x64 --platform win32
        if: matrix.os == "windows-latest"
        
      - name: Upload Build Artifacts (MacOS)
        uses: actions/upload-artifact@v2
        if: matrix.os == "macos-latest"
        with:
          name: macos-dist
          path: out/make
        
      - name: Upload Build Artifacts (Linux)
        uses: actions/upload-artifact@v2
        if: matrix.os == "ubuntu-latest"
        with:
          name: ubuntu-dist
          path: out/make
        
      - name: Upload Build Artifacts (Windows)
        uses: actions/upload-artifact@v2
        if: matrix.os == "windows-latest"
        with:
          name: windows-dist
          path: out/make
